import pytest
from task3.solution import appearance


@pytest.mark.parametrize("intervals,answer", [
    # Базовые тесты из задания
    (
        {
            'lesson': [1594663200, 1594666800],
            'pupil': [1594663340, 1594663389, 1594663390,
                      1594663395, 1594663396, 1594666472],
            'tutor': [1594663290, 1594663430, 1594663443,
                      1594666473]
        },
        3117
    ),
    (
        {
            'lesson': [1594702800, 1594706400],
            'pupil': [1594702789, 1594704500, 1594702807,
                      1594704542, 1594704512, 1594704513,
                      1594704564, 1594705150, 1594704581,
                      1594704582, 1594704734, 1594705009,
                      1594705095, 1594705096, 1594705106,
                      1594706480, 1594705158, 1594705773,
                      1594705849, 1594706480, 1594706500,
                      1594706875, 1594706502, 1594706503,
                      1594706524, 1594706524, 1594706579,
                      1594706641],
            'tutor': [1594700035, 1594700364, 1594702749,
                      1594705148, 1594705149, 1594706463]
        },
        3577
    ),
    (
        {
            'lesson': [1594692000, 1594695600],
            'pupil': [1594692033, 1594696347],
            'tutor': [1594692017, 1594692066, 1594692068,
                      1594696341]
        },
        3565
    ),
    # Нет пересечений
    (
        {
            'lesson': [100, 200],
            'pupil': [100, 120, 130, 140],
            'tutor': [150, 160, 170, 180]
        },
        0
    ),
    # Полное совпадение
    (
        {
            'lesson': [100, 200],
            'pupil': [100, 200],
            'tutor': [100, 200]
        },
        100
    ),
    # Ученик всегда, преподаватель частично
    (
        {
            'lesson': [100, 200],
            'pupil': [100, 200],
            'tutor': [120, 180]
        },
        60
    ),
    # Преподаватель всегда, ученик частично
    (
        {
            'lesson': [100, 200],
            'pupil': [120, 180],
            'tutor': [100, 200]
        },
        60
    ),
    # Пересекающиеся интервалы у ученика и преподавателя
    (
        {
            'lesson': [0, 100],
            'pupil': [10, 30, 40, 60, 70, 90],
            'tutor': [20, 50, 80, 100]
        },
        30  # (20-30)+(40-50)+(80-90)
    ),
    # Интервалы выходят за границы урока
    (
        {
            'lesson': [100, 200],
            'pupil': [50, 150, 160, 250],
            'tutor': [120, 170, 180, 220]
        },
        60  # (120-150)+(160-170)+(180-200)
    ),
    # Пустые интервалы
    (
        {
            'lesson': [100, 200],
            'pupil': [],
            'tutor': []
        },
        0
    ),
])
def test_appearance(intervals, answer):
    assert appearance(intervals) == answer
